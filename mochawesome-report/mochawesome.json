{
  "stats": {
    "suites": 4,
    "tests": 37,
    "passes": 32,
    "pending": 0,
    "failures": 5,
    "start": "2024-05-28T16:32:53.529Z",
    "end": "2024-05-28T16:34:03.485Z",
    "duration": 69956,
    "testsRegistered": 37,
    "passPercent": 86.48648648648648,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9a05d771-a91c-4b1b-9084-ab7ed1dd6991",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a855138f-5cf9-4233-99c3-784ec7ddc059",
          "title": "Forgot Page",
          "fullFile": "/Users/minhnd3/Desktop/Code/Selenium/first-prj/src/tests/forgotPage.spec.js",
          "file": "/src/tests/forgotPage.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Forgot Page\"",
              "fullTitle": "Forgot Page \"before all\" hook in \"Forgot Page\"",
              "timedOut": false,
              "duration": 1012,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "30177daf-8396-4cb5-9f31-76e4b5a9c784",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Forgot Page\"",
              "fullTitle": "Forgot Page \"after all\" hook in \"Forgot Page\"",
              "timedOut": false,
              "duration": 157,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "47419e4c-96de-4d2f-93b5-b55166403ef5",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Kiểm tra placeholder của trường Email",
              "fullTitle": "Forgot Page Kiểm tra placeholder của trường Email",
              "timedOut": false,
              "duration": 400,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openForgotPage(driver);\nconst emailField = await getFieldEmail(driver);\nconst attrPlaceholder = await emailField.getAttribute(\"placeholder\");\nexpect(attrPlaceholder).to.equal(\"Email của bạn *\");",
              "err": {},
              "uuid": "2249e005-3a0f-4931-bbfe-9d7bcb193087",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra Email là trường bắt buộc",
              "fullTitle": "Forgot Page Kiểm tra Email là trường bắt buộc",
              "timedOut": false,
              "duration": 1934,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openForgotPage(driver);\nconst sendPasswordBtn = await getSendPasswordBtn(driver);\nawait sendPasswordBtn.click();\nawait driver.sleep(1000);\nconst messageErrorEmailField = await getMessageErrorEmailField(driver);\nexpect(messageErrorEmailField).to.equal(\"Vui lòng nhập vào email\");",
              "err": {},
              "uuid": "8847082b-9c62-48c6-9317-97237887a516",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra với Email không có trong CSDL",
              "fullTitle": "Forgot Page Kiểm tra với Email không có trong CSDL",
              "timedOut": false,
              "duration": 1429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openForgotPage(driver);\nconst fieldEmail = await getFieldEmail(driver);\nfieldEmail.sendKeys(\"emailkhongtontai@gmail.com\");\nawait onClickSendPasswordBtn(driver);\nawait driver.sleep(1000);\nconst messageError = await getMessageErrorPopup(driver);\nexpect(messageError).to.equal(\"Thông tin tài khoản không tồn tại\");",
              "err": {},
              "uuid": "bfa3829e-c510-4d27-9172-f8b917c9829d",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với email không hợp lệ (sai định dạng)",
              "fullTitle": "Forgot Page Kiểm tra đăng nhập với email không hợp lệ (sai định dạng)",
              "timedOut": false,
              "duration": 1164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openForgotPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"invalidate.com\");\nawait onClickSendPasswordBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(1000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"Please include an '@' in the email address. 'invalidate.com' is missing an '@'.\"\n);",
              "err": {},
              "uuid": "9799e379-b0f0-4128-adb8-e14090c21ba2",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (trước dấu '@')",
              "fullTitle": "Forgot Page Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (trước dấu '@')",
              "timedOut": false,
              "duration": 1149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openForgotPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"'?''@.com\");\nawait onClickSendPasswordBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(1000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"'.' is used at a wrong position in '.com'.\"\n);",
              "err": {},
              "uuid": "860968ee-219f-4a98-9172-ed19de4192c1",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (sau dấu '@')",
              "fullTitle": "Forgot Page Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (sau dấu '@')",
              "timedOut": false,
              "duration": 1153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openForgotPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"hanhb@?.com\");\nawait onClickSendPasswordBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(1000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"A part following '@' should not contain the symbol '?'.\"\n);",
              "err": {},
              "uuid": "c29f1d68-c2e7-4cfc-ac82-c10158f5c7fc",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra điều hướng khi nhấn vào nút Quay về trang đăng nhập",
              "fullTitle": "Forgot Page Kiểm tra điều hướng khi nhấn vào nút Quay về trang đăng nhập",
              "timedOut": false,
              "duration": 1956,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openForgotPage(driver);\nawait onClickBackToLoginBtn(driver);\nawait driver.sleep(1000);\nconst newUrl = await driver.getCurrentUrl();\nconst loginUrl = `${config.baseURL}/user/account`;\nexpect(loginUrl).to.equal(newUrl);",
              "err": {},
              "uuid": "71ca8d6d-1c2c-4e00-bceb-3fc5c3c368d4",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra điều hướng khi nhấn vào nút Quay về trang đăng nhập",
              "fullTitle": "Forgot Page Kiểm tra điều hướng khi nhấn vào nút Quay về trang đăng nhập",
              "timedOut": false,
              "duration": 727,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await openForgotPage(driver);\nconst textBackToLoginBtn = await getTextBackToLoginBtn(driver);\nexpect(textBackToLoginBtn).to.equal(\"Quay về màn đăng nhập\");",
              "err": {
                "message": "AssertionError: expected 'Quay về đăng nhập' to equal 'Quay về màn đăng nhập'",
                "estack": "AssertionError: expected 'Quay về đăng nhập' to equal 'Quay về màn đăng nhập'\n    at Context.<anonymous> (src/tests/forgotPage.spec.js:126:35)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Quay về đăng nhập\n+ Quay về màn đăng nhập\n"
              },
              "uuid": "51ec6218-43dd-4c27-85d5-98d42c012a04",
              "parentUUID": "a855138f-5cf9-4233-99c3-784ec7ddc059",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2249e005-3a0f-4931-bbfe-9d7bcb193087",
            "8847082b-9c62-48c6-9317-97237887a516",
            "bfa3829e-c510-4d27-9172-f8b917c9829d",
            "9799e379-b0f0-4128-adb8-e14090c21ba2",
            "860968ee-219f-4a98-9172-ed19de4192c1",
            "c29f1d68-c2e7-4cfc-ac82-c10158f5c7fc",
            "71ca8d6d-1c2c-4e00-bceb-3fc5c3c368d4"
          ],
          "failures": [
            "51ec6218-43dd-4c27-85d5-98d42c012a04"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9912,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
          "title": "Login Page",
          "fullFile": "/Users/minhnd3/Desktop/Code/Selenium/first-prj/src/tests/loginPage.spec.js",
          "file": "/src/tests/loginPage.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login Page\"",
              "fullTitle": "Login Page \"before all\" hook in \"Login Page\"",
              "timedOut": false,
              "duration": 1184,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "c3d4bc00-13c4-4d11-9ebe-235316207339",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login Page\"",
              "fullTitle": "Login Page \"after all\" hook in \"Login Page\"",
              "timedOut": false,
              "duration": 54,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "100170f0-ff00-468a-9b17-7db7f154326d",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Kiểm tra placeholder của trường Email",
              "fullTitle": "Login Page Kiểm tra placeholder của trường Email",
              "timedOut": false,
              "duration": 321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst emailField = await getFieldEmail(driver);\nconst attrPlaceholder = await emailField.getAttribute(\"placeholder\");\nexpect(attrPlaceholder).to.equal(\"Email của bạn *\");",
              "err": {},
              "uuid": "2cf088ad-6b61-4a9e-8fc2-a5efd00b15e2",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với email không hợp lệ (sai định dạng)",
              "fullTitle": "Login Page Kiểm tra đăng nhập với email không hợp lệ (sai định dạng)",
              "timedOut": false,
              "duration": 1672,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"invalidate.com\");\nawait onClickLoginBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(1000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"Please include an '@' in the email address. 'invalidate.com' is missing an '@'.\"\n);",
              "err": {},
              "uuid": "9e96da48-222c-4320-b9ad-31726f1d42ce",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (trước dấu '@')",
              "fullTitle": "Login Page Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (trước dấu '@')",
              "timedOut": false,
              "duration": 1152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"'?''@.com\");\nawait onClickLoginBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(1000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"'.' is used at a wrong position in '.com'.\"\n);",
              "err": {},
              "uuid": "bfd155da-95da-4bfa-91a3-be037ad113fc",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (sau dấu '@')",
              "fullTitle": "Login Page Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (sau dấu '@')",
              "timedOut": false,
              "duration": 1274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"hanhb@?.com\");\nawait onClickLoginBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(1000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"A part following '@' should not contain the symbol '?'.\"\n);",
              "err": {},
              "uuid": "ed91bd76-da01-43bd-b08c-4e52cda19426",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra Email là trường bắt buộc",
              "fullTitle": "Login Page Kiểm tra Email là trường bắt buộc",
              "timedOut": false,
              "duration": 1261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst errorMsg = await getMessageEmailError(driver);\nexpect(errorMsg).to.equal(\"Vui lòng nhập email đăng nhập\");",
              "err": {},
              "uuid": "4cc79159-b082-40c1-99f1-426796e39219",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra Mật khẩu là trường bắt buộc",
              "fullTitle": "Login Page Kiểm tra Mật khẩu là trường bắt buộc",
              "timedOut": false,
              "duration": 2418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nlet isError = false;\n// Kiểm tra trường bấm mà chưa nhập khoảng trắng\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst errorMsg = await getMessagePasswordError(driver);\nconst isError1 = errorMsg === \"Vui lòng nhập mật khẩu đăng nhập\";\n// Kiểm tra trường hợp bấm đa nhập khoảng trắng\nconst fieldPassword = await getFieldPassword(driver);\nfieldPassword.sendKeys(\"      \");\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst errorMsg1 = await getMessagePasswordError(driver);\nconst isError2 = errorMsg1 === \"Vui lòng nhập mật khẩu đăng nhập\";\n// Thoả mãn 2 điều kiện đã đề ra\nisError = isError1 && isError2;\nexpect(isError).to.equal(true);",
              "err": {},
              "uuid": "43b281bd-1cd0-4b96-9623-5dc2ddaa135b",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check text of login button",
              "fullTitle": "Login Page Check text of login button",
              "timedOut": false,
              "duration": 1606,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst textOfLoginBtn = await getTextOfLoginBtn(driver);\nexpect(textOfLoginBtn).to.equal(\"ĐĂNG NHẬP\");",
              "err": {},
              "uuid": "109c77b5-14b4-4340-b57d-809484a881f8",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check text of forgot password",
              "fullTitle": "Login Page Check text of forgot password",
              "timedOut": false,
              "duration": 833,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst textOfForgotPasswordBtn = await getTextOfForgotPasswordBtn(driver);\nexpect(textOfForgotPasswordBtn).to.equal(\"Quên mật khẩu\");",
              "err": {},
              "uuid": "97e56a81-25ce-46d0-b1fa-7f62186fbb9e",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra điều hướng khi nhấn vào nút quên mật khẩu",
              "fullTitle": "Login Page Kiểm tra điều hướng khi nhấn vào nút quên mật khẩu",
              "timedOut": false,
              "duration": 1970,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst elmForgotPassword = await getElmForgotPassword(driver);\nawait elmForgotPassword.click();\nawait driver.sleep(1000);\nconst currentUrl = await driver.getCurrentUrl();\nexpect(new URL(currentUrl).pathname).to.equal(\"/forgot/password\");",
              "err": {},
              "uuid": "33f0b67c-32f7-43da-9f79-1a80a060c376",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với tài khoản không tồn tại trong CSDL",
              "fullTitle": "Login Page Kiểm tra đăng nhập với tài khoản không tồn tại trong CSDL",
              "timedOut": false,
              "duration": 1495,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\n// get email field\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"nbhanh@gmail.com\");\n// get password field\nconst fieldPassword = await getFieldPassword(driver);\nfieldPassword.sendKeys(\"12345678\");\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst messageLoginFail = await getMessageLoginFail(driver);\nexpect(messageLoginFail).to.equal(\"Thông tin tài khoản không tồn tại\");",
              "err": {},
              "uuid": "0d26fe9b-cc02-4a51-addb-d728dbd9401c",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Mật khẩu không chính xác",
              "fullTitle": "Login Page Kiểm tra đăng nhập với Mật khẩu không chính xác",
              "timedOut": false,
              "duration": 1389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\n// get email field\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"ndminhvnua@gmail.com\");\n// get password field\nconst fieldPassword = await getFieldPassword(driver);\nfieldPassword.sendKeys(\"12345678\");\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst newUrl = await driver.getCurrentUrl();\nconst urlBase = `${config.baseURL}/user/account`;\nexpect(urlBase).to.equal(newUrl);",
              "err": {},
              "uuid": "2d134fda-6d27-4f80-9e21-c29e323de957",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với tài khoản đã tồn tại trong CSDL",
              "fullTitle": "Login Page Kiểm tra đăng nhập với tài khoản đã tồn tại trong CSDL",
              "timedOut": false,
              "duration": 1541,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\n// get email field\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"ndminhvnua@gmail.com\");\n// get password field\nconst fieldPassword = await getFieldPassword(driver);\nfieldPassword.sendKeys(\"123456789\");\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst newUrl = await driver.getCurrentUrl();\nconst loginUrl = `${config.baseURL}/`;\nexpect(loginUrl).to.equal(newUrl);",
              "err": {
                "message": "AssertionError: expected 'http://127.0.0.1:8000/' to equal 'http://127.0.0.1:8000/user/account'",
                "estack": "AssertionError: expected 'http://127.0.0.1:8000/' to equal 'http://127.0.0.1:8000/user/account'\n    at Context.<anonymous> (src/tests/loginPage.spec.js:196:25)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- http://127.0.0.1:8000/\n+ http://127.0.0.1:8000/user/account\n"
              },
              "uuid": "8f318d61-0612-4d39-afe8-a130eb92591f",
              "parentUUID": "7024b2ad-de61-4ec7-a479-b670380ef4cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cf088ad-6b61-4a9e-8fc2-a5efd00b15e2",
            "9e96da48-222c-4320-b9ad-31726f1d42ce",
            "bfd155da-95da-4bfa-91a3-be037ad113fc",
            "ed91bd76-da01-43bd-b08c-4e52cda19426",
            "4cc79159-b082-40c1-99f1-426796e39219",
            "43b281bd-1cd0-4b96-9623-5dc2ddaa135b",
            "109c77b5-14b4-4340-b57d-809484a881f8",
            "97e56a81-25ce-46d0-b1fa-7f62186fbb9e",
            "33f0b67c-32f7-43da-9f79-1a80a060c376",
            "0d26fe9b-cc02-4a51-addb-d728dbd9401c",
            "2d134fda-6d27-4f80-9e21-c29e323de957"
          ],
          "failures": [
            "8f318d61-0612-4d39-afe8-a130eb92591f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16932,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
          "title": "Register Page",
          "fullFile": "/Users/minhnd3/Desktop/Code/Selenium/first-prj/src/tests/registerPage.spec.js",
          "file": "/src/tests/registerPage.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Register Page\"",
              "fullTitle": "Register Page \"before all\" hook in \"Register Page\"",
              "timedOut": false,
              "duration": 2097,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "f7eafd91-f6db-49b8-9b0a-7d35652c26db",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Register Page\"",
              "fullTitle": "Register Page \"after all\" hook in \"Register Page\"",
              "timedOut": false,
              "duration": 52,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "566d34c0-d9bf-41e9-8f33-afb3c2f2a495",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Kiểm tra Họ và tên là trường bắt buộc",
              "fullTitle": "Register Page Kiểm tra Họ và tên là trường bắt buộc",
              "timedOut": false,
              "duration": 3312,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nawait onClickRegisterBtn(driver);\nawait driver.sleep(2000);\nconst messageErrorFullNameField = await getMessageErrorFullNameField(\n  driver\n);\nexpect(messageErrorFullNameField).to.equal(\"Vui lòng nhập vào họ tên\");",
              "err": {},
              "uuid": "0fcf0b4d-086e-4b89-a591-620104107ff6",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra placeholder của trường Họ và tên",
              "fullTitle": "Register Page Kiểm tra placeholder của trường Họ và tên",
              "timedOut": false,
              "duration": 216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nconst fullNameField = await getFieldFullName(driver);\nconst attrPlaceholder = await fullNameField.getAttribute(\"placeholder\");\nexpect(attrPlaceholder).to.equal(\"Họ và tên *\");",
              "err": {},
              "uuid": "84b95718-cbfd-4cab-b3a8-7aaffd3a038f",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra Email là trường bắt buộc",
              "fullTitle": "Register Page Kiểm tra Email là trường bắt buộc",
              "timedOut": false,
              "duration": 2341,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nawait onClickRegisterBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(2000);\nconst messageErrorEmailField = await getMessageErrorEmailField(driver);\nexpect(messageErrorEmailField).to.equal(\"Vui lòng nhập email đăng nhập\");",
              "err": {
                "message": "AssertionError: expected 'Vui lòng nhập vào email đăng nhập' to equal 'Vui lòng nhập email đăng nhập'",
                "estack": "AssertionError: expected 'Vui lòng nhập vào email đăng nhập' to equal 'Vui lòng nhập email đăng nhập'\n    at Context.<anonymous> (src/tests/registerPage.spec.js:57:39)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Vui lòng nhập vào email đăng nhập\n+ Vui lòng nhập email đăng nhập\n"
              },
              "uuid": "7c2ee38f-2771-459f-857e-65700657a04f",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra placeholder của trường Email",
              "fullTitle": "Register Page Kiểm tra placeholder của trường Email",
              "timedOut": false,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nconst emailField = await getFieldEmail(driver);\nconst attrPlaceholder = await emailField.getAttribute(\"placeholder\");\nexpect(attrPlaceholder).to.equal(\"Email của bạn *\");",
              "err": {},
              "uuid": "210d3714-9c74-4155-a462-dd44d21a4ec0",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với email không hợp lệ (sai định dạng)",
              "fullTitle": "Register Page Kiểm tra đăng nhập với email không hợp lệ (sai định dạng)",
              "timedOut": false,
              "duration": 2237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"invalidate.com\");\nawait onClickRegisterBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(2000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"Please include an '@' in the email address. 'invalidate.com' is missing an '@'.\"\n);",
              "err": {},
              "uuid": "b078d025-0c4e-45b7-aad4-1fca2b87fc03",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (trước dấu '@')",
              "fullTitle": "Register Page Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (trước dấu '@')",
              "timedOut": false,
              "duration": 2157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"'?''@.com\");\nawait onClickRegisterBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(2000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"'.' is used at a wrong position in '.com'.\"\n);",
              "err": {},
              "uuid": "26985487-cc33-42d1-aedd-424be595f630",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (sau dấu '@')",
              "fullTitle": "Register Page Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (sau dấu '@')",
              "timedOut": false,
              "duration": 2382,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"hanhb@?.com\");\nawait onClickRegisterBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(2000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"A part following '@' should not contain the symbol '?'.\"\n);",
              "err": {},
              "uuid": "6935a23f-c7ce-42ed-8090-b54e847212c3",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng kí với Số điện thoại không hợp lệ (sai định dạng)",
              "fullTitle": "Register Page Kiểm tra đăng kí với Số điện thoại không hợp lệ (sai định dạng)",
              "timedOut": false,
              "duration": 2447,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nconst phoneNumberField = await getFieldPhoneNumber(driver);\nphoneNumberField.sendKeys(\"091233456789\");\nawait onClickRegisterBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(2000);\nconst messageErrorPhoneNumberField = await getMessageErrorPhoneNumberField(\n  driver\n);\nexpect(messageErrorPhoneNumberField).to.equal(\n  \"Không đúng định dạng dữ liệu\"\n);",
              "err": {},
              "uuid": "caf3a854-6c20-4346-972c-e542246c736c",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra Số điện thoại là trường bắt buộc",
              "fullTitle": "Register Page Kiểm tra Số điện thoại là trường bắt buộc",
              "timedOut": false,
              "duration": 2662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nawait onClickRegisterBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(2000);\nconst messageErrorPhoneNumberField = await getMessageErrorPhoneNumberField(\n  driver\n);\nexpect(messageErrorPhoneNumberField).to.equal(\n  \"Vui lòng nhập vào số điện thoại\"\n);",
              "err": {},
              "uuid": "6ec44444-2ad0-4e66-a193-b9250672c4ab",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra Mật khẩu là trường bắt buộc",
              "fullTitle": "Register Page Kiểm tra Mật khẩu là trường bắt buộc",
              "timedOut": false,
              "duration": 2423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nawait onClickRegisterBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(2000);\nconst messageErrorPasswordField = await getMessageErrorPasswordField(\n  driver\n);\nexpect(messageErrorPasswordField).to.equal(\n  \"Vui lòng nhập mật khẩu đăng nhập\"\n);",
              "err": {},
              "uuid": "cfd09da1-bcc7-4f26-ad5d-61c02a4abfe3",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra Nhập lại mật khẩu là trường bắt buộc",
              "fullTitle": "Register Page Kiểm tra Nhập lại mật khẩu là trường bắt buộc",
              "timedOut": false,
              "duration": 2242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nawait onClickRegisterBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(2000);\nconst messageErrorConfirmPasswordField =\n  await getMessageErrorConfirmPasswordField(driver);\nexpect(messageErrorConfirmPasswordField).to.equal(\n  \"Vui lòng nhập mật khẩu đăng nhập\"\n);",
              "err": {},
              "uuid": "8fc703fe-a343-48e8-9cdb-a5bbfcfcb675",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra placeholder của trường Nhập lại mật khẩu",
              "fullTitle": "Register Page Kiểm tra placeholder của trường Nhập lại mật khẩu",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nconst confirmPasswordField = await getFieldConfirmPassword(driver);\nconst attrPlaceholder = await confirmPasswordField.getAttribute(\n  \"placeholder\"\n);\nexpect(attrPlaceholder).to.equal(\"Nhập lại mật khẩu *\");",
              "err": {},
              "uuid": "3431cc3c-b556-4f38-840b-7befec7f78fe",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng kí với số điện thoại đã tồn tại trong CSDL",
              "fullTitle": "Register Page Kiểm tra đăng kí với số điện thoại đã tồn tại trong CSDL",
              "timedOut": false,
              "duration": 2309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nconst phoneNumberField = await getFieldPhoneNumber(driver);\nphoneNumberField.sendKeys(\"0123456789\");\nawait onClickRegisterBtn(driver);\nawait driver.sleep(2000);\nconst messageErrorPhoneNumberField = await getMessageErrorPhoneNumberField(\n  driver\n);\nexpect(messageErrorPhoneNumberField).to.equal(\n  \"Số điện thoại không được phép trùng lặp\"\n);",
              "err": {
                "message": "AssertionError: expected 'Vui lòng nhập mật khẩu đăng nhập' to equal 'Số điện thoại không được phép trùng l…'",
                "estack": "AssertionError: expected 'Vui lòng nhập mật khẩu đăng nhập' to equal 'Số điện thoại không được phép trùng l…'\n    at Context.<anonymous> (src/tests/registerPage.spec.js:214:45)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Vui lòng nhập mật khẩu đăng nhập\n+ Số điện thoại không được phép trùng lặp\n"
              },
              "uuid": "671ebbbc-772c-42b1-b61e-cf905befcccc",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng ký thành công",
              "fullTitle": "Register Page Kiểm tra đăng ký thành công",
              "timedOut": false,
              "duration": 2390,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await openRegisterPage(driver);\nconst fullNameField = await getFieldFullName(driver);\nconst fieldEmail = await getFieldEmail(driver);\nconst fieldPhoneNumber = await getFieldPhoneNumber(driver);\nconst fieldPassword = await getFieldPassword(driver);\nconst fieldConfirmPassword = await getFieldConfirmPassword(driver);\nfullNameField.sendKeys(\"hanhnb2606\");\nfieldEmail.sendKeys(\"hanvnuasl2@gmail.com\");\nfieldPhoneNumber.sendKeys(\"0982763541\");\nfieldPassword.sendKeys(\"123456789\");\nfieldConfirmPassword.sendKeys(\"123456789\");\nawait onClickRegisterBtn(driver);\nawait driver.sleep(2000);\nconst homeUrl = config.baseURL;\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.equal(`${homeUrl}/`);",
              "err": {
                "message": "AssertionError: expected 'http://127.0.0.1:8000/user/account' to equal 'http://127.0.0.1:8000/'",
                "estack": "AssertionError: expected 'http://127.0.0.1:8000/user/account' to equal 'http://127.0.0.1:8000/'\n    at Context.<anonymous> (src/tests/registerPage.spec.js:241:27)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- http://127.0.0.1:8000/user/account\n+ http://127.0.0.1:8000/\n"
              },
              "uuid": "57e37c64-5224-4020-a0f7-a010e78dcb8c",
              "parentUUID": "0aeb8104-32fa-4c53-95a2-bd95c99ffe5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fcf0b4d-086e-4b89-a591-620104107ff6",
            "84b95718-cbfd-4cab-b3a8-7aaffd3a038f",
            "210d3714-9c74-4155-a462-dd44d21a4ec0",
            "b078d025-0c4e-45b7-aad4-1fca2b87fc03",
            "26985487-cc33-42d1-aedd-424be595f630",
            "6935a23f-c7ce-42ed-8090-b54e847212c3",
            "caf3a854-6c20-4346-972c-e542246c736c",
            "6ec44444-2ad0-4e66-a193-b9250672c4ab",
            "cfd09da1-bcc7-4f26-ad5d-61c02a4abfe3",
            "8fc703fe-a343-48e8-9cdb-a5bbfcfcb675",
            "3431cc3c-b556-4f38-840b-7befec7f78fe"
          ],
          "failures": [
            "7c2ee38f-2771-459f-857e-65700657a04f",
            "671ebbbc-772c-42b1-b61e-cf905befcccc",
            "57e37c64-5224-4020-a0f7-a010e78dcb8c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 27320,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e802733a-05d8-425a-b074-6a91e69ad665",
          "title": "Search",
          "fullFile": "/Users/minhnd3/Desktop/Code/Selenium/first-prj/src/tests/search.spec.js",
          "file": "/src/tests/search.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Search\"",
              "fullTitle": "Search \"before all\" hook in \"Search\"",
              "timedOut": false,
              "duration": 1129,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "fe028681-268e-42ab-a5b4-8bfcda7462a2",
              "parentUUID": "e802733a-05d8-425a-b074-6a91e69ad665",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Search\"",
              "fullTitle": "Search \"after all\" hook in \"Search\"",
              "timedOut": false,
              "duration": 742,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "4a080e4d-5b39-420d-987e-6aa0e1ac11ac",
              "parentUUID": "e802733a-05d8-425a-b074-6a91e69ad665",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Kiểm tra chức năng mở lightbox Tìm kiếm",
              "fullTitle": "Search Kiểm tra chức năng mở lightbox Tìm kiếm",
              "timedOut": false,
              "duration": 2216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openHomePage(driver);\nawait onClickSearch(driver);\nawait driver.sleep(1000);\nconst searchDisplay = await checkDisplaySearch(driver);\nexpect(\n  searchDisplay === false,\n  \"Lỗi thanh tìm kiếm không hiển thị khi nhấn vào nút tìm kiếm\"\n).to.be.false;",
              "err": {},
              "uuid": "d9d7f89e-794c-48f0-a307-8b7475056c39",
              "parentUUID": "e802733a-05d8-425a-b074-6a91e69ad665",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra chức năng tắt lightbox Tìm kiếm",
              "fullTitle": "Search Kiểm tra chức năng tắt lightbox Tìm kiếm",
              "timedOut": false,
              "duration": 2373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openHomePage(driver);\n// 1. mở search\nawait onClickSearch(driver);\n// 2. bỏ qua sự kiện\nawait driver.sleep(1000);\n// 3. check search opened\nconst searchDisplay = await checkDisplaySearch(driver);\n// 4. search mà không hiển thị thì lỗi luôn\nif (searchDisplay === false) {\n  expect(\n    searchDisplay === false,\n    \"Lỗi thanh tìm kiếm không hiển thị khi nhấn vào nút tìm kiếm\"\n  ).to.be.false;\n  return;\n}\n// 5. tắt search\nawait onClickHiddenSearch(driver);\n// 6. bỏ qua sự kiện\nawait driver.sleep(1000);\n// 7. check search ẩn\nconst searchHidden = await checkHiddenSearch(driver);\nexpect(\n  searchHidden === false,\n  \"Lỗi thanh tìm kiếm không ẩn khi nhấn vào nút x\"\n).to.be.false;",
              "err": {},
              "uuid": "afd0310c-31f7-4978-9c4b-df137036c96a",
              "parentUUID": "e802733a-05d8-425a-b074-6a91e69ad665",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra kết quả tìm kiếm theo tên sản phẩm",
              "fullTitle": "Search Kiểm tra kết quả tìm kiếm theo tên sản phẩm",
              "timedOut": false,
              "duration": 4761,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openHomePage(driver);\n// mở search\nawait onClickSearch(driver);\n// bỏ qua sự kiện\nawait driver.sleep(1000);\n// kiểm tra search bar mở\nconst searchDisplay = await checkDisplaySearch(driver);\nif (searchDisplay === false) {\n  expect(\n    searchDisplay === false,\n    \"Lỗi thanh tìm kiếm không hiển thị khi nhấn vào nút tìm kiếm\"\n  ).to.be.false;\n  return;\n}\n// lấy thanh search bar\nconst searchBar = await getSearchBar(driver);\nawait searchBar.sendKeys(\"Áo thun\");\n// bắt đầu search\nawait onClickStartSearch(driver);\n// bỏ qua sự kiện\nawait driver.sleep(3000);\nlet searchResults = await getProductsName(driver);\n// kiểm tra trong tên có từ Áo thun không\nlet allProductsContainText = true;\nfor (let result of searchResults) {\n  let text = await result.getText();\n  // đổi thành text viết hoa\n  const textUpperCase = text.toUpperCase();\n  if (!textUpperCase.includes(\"ÁO THUN\")) {\n    allProductsContainText = false;\n    break;\n  }\n}\nexpect(\n  allProductsContainText === false,\n  \"Kết quả tìm kiếm sản phẩm có từ Áo thun sai do có chứa sản phẩm khác tên\"\n).to.be.false;",
              "err": {},
              "uuid": "60c5bee7-7f62-4c52-ae49-4822e2c371c7",
              "parentUUID": "e802733a-05d8-425a-b074-6a91e69ad665",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9d7f89e-794c-48f0-a307-8b7475056c39",
            "afd0310c-31f7-4978-9c4b-df137036c96a",
            "60c5bee7-7f62-4c52-ae49-4822e2c371c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9350,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}