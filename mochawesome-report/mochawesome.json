{
  "stats": {
    "suites": 1,
    "tests": 12,
    "passes": 10,
    "pending": 0,
    "failures": 2,
    "start": "2024-05-29T15:31:47.312Z",
    "end": "2024-05-29T15:32:04.644Z",
    "duration": 17332,
    "testsRegistered": 12,
    "passPercent": 83.33333333333334,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c9dbb652-7bfc-41e8-92ed-ebd1e79e89da",
      "title": "",
      "fullFile": "/Users/minhnd3/Desktop/Code/Selenium/first-prj/src/tests/loginPage.spec.js",
      "file": "/src/tests/loginPage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f13231d5-4b32-4a1c-9967-28fb73859b17",
          "title": "Login Page",
          "fullFile": "/Users/minhnd3/Desktop/Code/Selenium/first-prj/src/tests/loginPage.spec.js",
          "file": "/src/tests/loginPage.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login Page\"",
              "fullTitle": "Login Page \"before all\" hook in \"Login Page\"",
              "timedOut": false,
              "duration": 1167,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();",
              "err": {},
              "uuid": "ff8155d6-8943-4ee4-a182-5317dacf1a0c",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login Page\"",
              "fullTitle": "Login Page \"after all\" hook in \"Login Page\"",
              "timedOut": false,
              "duration": 54,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "bfb59509-97dd-4c27-9874-461aab577eec",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Kiểm tra placeholder của trường Email",
              "fullTitle": "Login Page Kiểm tra placeholder của trường Email",
              "timedOut": false,
              "duration": 353,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst emailField = await getFieldEmail(driver);\nconst attrPlaceholder = await emailField.getAttribute(\"placeholder\");\nexpect(attrPlaceholder).to.equal(\"Email của bạn *\");",
              "err": {},
              "uuid": "04e47f61-5e9d-4fec-ba77-d519037b2e2f",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với email không hợp lệ (sai định dạng)",
              "fullTitle": "Login Page Kiểm tra đăng nhập với email không hợp lệ (sai định dạng)",
              "timedOut": false,
              "duration": 1276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"invalidate.com\");\nawait onClickLoginBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(1000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"Please include an '@' in the email address. 'invalidate.com' is missing an '@'.\"\n);",
              "err": {},
              "uuid": "7dc93541-36ec-4524-a638-a80f0ba94810",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (trước dấu '@')",
              "fullTitle": "Login Page Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (trước dấu '@')",
              "timedOut": false,
              "duration": 1161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"'?''@.com\");\nawait onClickLoginBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(1000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"'.' is used at a wrong position in '.com'.\"\n);",
              "err": {},
              "uuid": "1ae0e67d-ba6c-48cc-9de8-889545459580",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (sau dấu '@')",
              "fullTitle": "Login Page Kiểm tra đăng nhập với Email chứa kí tự đặc biệt trong phần tên người dùng (sau dấu '@')",
              "timedOut": false,
              "duration": 1178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"hanhb@?.com\");\nawait onClickLoginBtn(driver);\n// Wait for a brief moment to ensure any navigation attempts would have been triggered\nawait driver.sleep(1000);\nconst validationMessage = await emailField.getAttribute(\n  \"validationMessage\"\n);\nexpect(validationMessage).to.equal(\n  \"A part following '@' should not contain the symbol '?'.\"\n);",
              "err": {},
              "uuid": "ebb7ad5c-bdff-44cb-8b8c-6830cb4392f9",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra Email là trường bắt buộc",
              "fullTitle": "Login Page Kiểm tra Email là trường bắt buộc",
              "timedOut": false,
              "duration": 1241,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst errorMsg = await getMessageEmailError(driver);\nexpect(errorMsg).to.equal(\"Vui lòng nhập email đăng nhập\");",
              "err": {
                "message": "AssertionError: expected '' to equal 'Vui lòng nhập email đăng nhập'",
                "estack": "AssertionError: expected '' to equal 'Vui lòng nhập email đăng nhập'\n    at Context.<anonymous> (src/tests/loginPage.spec.js:93:25)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "+ Vui lòng nhập email đăng nhập\n"
              },
              "uuid": "1773abe2-cfa9-499e-80bd-40782fee6c91",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra Mật khẩu là trường bắt buộc",
              "fullTitle": "Login Page Kiểm tra Mật khẩu là trường bắt buộc",
              "timedOut": false,
              "duration": 2416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nlet isError = false;\n// Kiểm tra trường bấm mà chưa nhập khoảng trắng\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst errorMsg = await getMessagePasswordError(driver);\nconst isError1 = errorMsg === \"Vui lòng nhập mật khẩu đăng nhập\";\n// Kiểm tra trường hợp bấm đa nhập khoảng trắng\nconst fieldPassword = await getFieldPassword(driver);\nfieldPassword.sendKeys(\"      \");\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst errorMsg1 = await getMessagePasswordError(driver);\nconst isError2 = errorMsg1 === \"Vui lòng nhập mật khẩu đăng nhập\";\n// Thoả mãn 2 điều kiện đã đề ra\nisError = isError1 && isError2;\nexpect(isError).to.equal(true);",
              "err": {},
              "uuid": "becdb687-b5b2-4848-902a-b01b4cfc6593",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra tên nút Đăng nhập",
              "fullTitle": "Login Page Kiểm tra tên nút Đăng nhập",
              "timedOut": false,
              "duration": 1758,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst textOfLoginBtn = await getTextOfLoginBtn(driver);\nexpect(textOfLoginBtn).to.equal(\"ĐĂNG NHẬP\");",
              "err": {},
              "uuid": "9025666b-fa0b-4611-bc15-20c3853cb61a",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra tên nút Quên mật khẩu",
              "fullTitle": "Login Page Kiểm tra tên nút Quên mật khẩu",
              "timedOut": false,
              "duration": 751,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst textOfForgotPasswordBtn = await getTextOfForgotPasswordBtn(driver);\nexpect(textOfForgotPasswordBtn).to.equal(\"Quên mật khẩu\");",
              "err": {},
              "uuid": "f5effc9a-b0e5-4cc1-adb4-f5ea23e2e99d",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra điều hướng khi nhấn vào nút quên mật khẩu",
              "fullTitle": "Login Page Kiểm tra điều hướng khi nhấn vào nút quên mật khẩu",
              "timedOut": false,
              "duration": 1920,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\nconst elmForgotPassword = await getElmForgotPassword(driver);\nawait elmForgotPassword.click();\nawait driver.sleep(1000);\nconst currentUrl = await driver.getCurrentUrl();\nexpect(new URL(currentUrl).pathname).to.equal(\"/forgot/password\");",
              "err": {},
              "uuid": "ea957506-5cae-4f8f-9af4-1f76d36cf222",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với tài khoản không tồn tại trong CSDL",
              "fullTitle": "Login Page Kiểm tra đăng nhập với tài khoản không tồn tại trong CSDL",
              "timedOut": false,
              "duration": 1355,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\n// get email field\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"nbhanh@gmail.com\");\n// get password field\nconst fieldPassword = await getFieldPassword(driver);\nfieldPassword.sendKeys(\"12345678\");\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst messageLoginFail = await getMessageLoginFail(driver);\nexpect(messageLoginFail).to.equal(\"Thông tin tài khoản không tồn tại\");",
              "err": {},
              "uuid": "6fe64a1a-690e-44c5-aba3-90600d3a1c2d",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với Mật khẩu không chính xác",
              "fullTitle": "Login Page Kiểm tra đăng nhập với Mật khẩu không chính xác",
              "timedOut": false,
              "duration": 1399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\n// get email field\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"toothless@gmail.com\");\n// get password field\nconst fieldPassword = await getFieldPassword(driver);\nfieldPassword.sendKeys(\"12345678\");\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst newUrl = await driver.getCurrentUrl();\nconst urlBase = `${config.baseURL}/user/account`;\nexpect(urlBase).to.equal(newUrl);",
              "err": {},
              "uuid": "753e99e4-18f5-4c2a-aef6-8e0cac617d07",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Kiểm tra đăng nhập với tài khoản đã tồn tại trong CSDL",
              "fullTitle": "Login Page Kiểm tra đăng nhập với tài khoản đã tồn tại trong CSDL",
              "timedOut": false,
              "duration": 1292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await openLoginPage(driver);\n// get email field\nconst emailField = await getFieldEmail(driver);\nawait emailField.sendKeys(\"toothless@gmail.com\");\n// get password field\nconst fieldPassword = await getFieldPassword(driver);\nfieldPassword.sendKeys(\"123456\");\nawait onClickLoginBtn(driver);\nawait driver.sleep(1000);\nconst newUrl = await driver.getCurrentUrl();\nconst loginUrl = `${config.baseURL}/`;\nexpect(loginUrl).to.equal(newUrl);",
              "err": {
                "message": "AssertionError: expected 'http://127.0.0.1:8000/' to equal 'http://127.0.0.1:8000/user/account'",
                "estack": "AssertionError: expected 'http://127.0.0.1:8000/' to equal 'http://127.0.0.1:8000/user/account'\n    at Context.<anonymous> (src/tests/loginPage.spec.js:196:25)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- http://127.0.0.1:8000/\n+ http://127.0.0.1:8000/user/account\n"
              },
              "uuid": "3905e1a3-141c-4749-bc5d-54957e621621",
              "parentUUID": "f13231d5-4b32-4a1c-9967-28fb73859b17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04e47f61-5e9d-4fec-ba77-d519037b2e2f",
            "7dc93541-36ec-4524-a638-a80f0ba94810",
            "1ae0e67d-ba6c-48cc-9de8-889545459580",
            "ebb7ad5c-bdff-44cb-8b8c-6830cb4392f9",
            "becdb687-b5b2-4848-902a-b01b4cfc6593",
            "9025666b-fa0b-4611-bc15-20c3853cb61a",
            "f5effc9a-b0e5-4cc1-adb4-f5ea23e2e99d",
            "ea957506-5cae-4f8f-9af4-1f76d36cf222",
            "6fe64a1a-690e-44c5-aba3-90600d3a1c2d",
            "753e99e4-18f5-4c2a-aef6-8e0cac617d07"
          ],
          "failures": [
            "1773abe2-cfa9-499e-80bd-40782fee6c91",
            "3905e1a3-141c-4749-bc5d-54957e621621"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16100,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}